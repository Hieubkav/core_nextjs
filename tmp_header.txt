'use client';

import React, { useState } from 'react';
import Link from 'next/link';

interface HeaderProps {
  cartCount?: number;
  isLoggedIn?: boolean;
  username?: string;
  settings?: Record<string, string>;
}

const Header: React.FC<HeaderProps> = ({ 
  cartCount = 0, 
  isLoggedIn = false, 
  username = '',
  settings = {}
}) => {
  // Default values from settings
 const siteName = settings.site_name || 'ACCSTORE';
  
  // Hàm cuộn mượt đến phần tử
  const scrollToSection = (elementId: string) => {
    const element = document.getElementById(elementId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  };

  const [mobileOpen, setMobileOpen] = useState(false);
  const handleNavClick = (id: string) => {
    scrollToSection(id);
    setMobileOpen(false);
  };

  return (
    <header className="fixed top-0 inset-x-0 h-16 bg-white/70 backdrop-blur-md border-b border-gray-200 z-50 flex items-center px-4">
      <div className="container mx-auto flex items-center justify-between relative">
        {/* Logo */}
        <div className="flex items-center">
          <Link href="/" className="text-xl font-bold text-primary">
            {siteName.split('STORE')[0]}<span className="text-dark">STORE</span>
          </Link>
        </div>

        {/* Menu điều hướng */}
        <nav className="hidden md:flex space-x-6">
          <Link href="/" className="text-dark hover:text-primary transition-colors">
            Trang chủ
          </Link>
          <button 
            onClick={() => scrollToSection('categories')}
            className="text-dark hover:text-primary transition-colors bg-transparent border-none cursor-pointer"
          >
            Danh mục
          </button>
          <button 
            onClick={() => scrollToSection('products')}
            className="text-dark hover:text-primary transition-colors bg-transparent border-none cursor-pointer"
          >
            Sản phẩm
          </button>
          <button 
            onClick={() => scrollToSection('blog')}
            className="text-dark hover:text-primary transition-colors bg-transparent border-none cursor-pointer"
          >
            Blog
          </button>
          <button 
            onClick={() => scrollToSection('contact')}
            className="text-dark hover:text-primary transition-colors bg-transparent border-none cursor-pointer"
          >
            Liên hệ
          </button>
        </nav>

        {/* Các icon chức năng */}
        <div className="flex items-center space-x-4">
          {/* Thanh tìm kiếm - ẩn trên mobile */}
          <div className="hidden md:flex items-center">
            <input 
              type="text" 
              placeholder="Tìm kiếm..." 
              className="input py-1 px-3 text-sm" 
            />
            <button className="btn ml-2 py-1 px-3 text-sm">
              Tìm
            </button>
          </div>

          {/* Icon giỏ hàng */}
          <div className="relative">
            <Link href="/cart" className="text-dark hover:text-primary transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 014 0z" />
              </svg>
            </Link>
            {cartCount > 0 && (
              <span className="absolute -top-2 -right-2 bg-primary text-light text-xs rounded-full h-5 w-5 flex items-center justify-center">
                {cartCount}
              </span>
            )}
          </div>

          {/* Avatar người dùng hoặc đăng nhập */}
          {isLoggedIn ? (
            <div className="flex items-center">
              <span className="hidden md:inline mr-2 text-dark">{username}</span>
              <div className="w-8 h-8 rounded-full bg-primary flex items-center justify-center text-light">
                {username.charAt(0).toUpperCase()}
              </div>
            </div>
          ) : (
            <div className="flex space-x-2">
              <Link href="/auth/signin" className="text-dark hover:text-primary transition-colors text-sm">
                Đăng nhập
              </Link>
              <span className="hidden md:inline text-dark">|</span>
              <Link href="/auth/signup" className="text-dark hover:text-primary transition-colors text-sm">
                Đăng ký
              </Link>
            </div>
          )}

          {/* Hamburger menu cho mobile */}
          <button
            className="md:hidden text-dark"
            aria-label="Toggle menu"
            aria-expanded={mobileOpen}
            onClick={() => setMobileOpen(v => !v)}
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              {mobileOpen ? (
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              ) : (
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
              )}
            </svg>
          </button>
        </div>
        {mobileOpen && (
          <div className="md:hidden absolute top-16 left-0 right-0 bg-white/95 backdrop-blur-md border-b border-gray-200 shadow-sm">
            <div className="px-4 py-3 flex flex-col space-y-3">
              <Link href="/" onClick={() => setMobileOpen(false)} className="text-dark hover:text-primary transition-colors">Trang ch?</Link>
              <button onClick={() => handleNavClick('categories')} className="text-left text-dark hover:text-primary">Danh m?c</button>
              <button onClick={() => handleNavClick('products')} className="text-left text-dark hover:text-primary">S?n ph?m</button>
              <button onClick={() => handleNavClick('blog')} className="text-left text-dark hover:text-primary">Blog</button>
              <button onClick={() => handleNavClick('contact')} className="text-left text-dark hover:text-primary">Lien he</button>
            </div>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;

